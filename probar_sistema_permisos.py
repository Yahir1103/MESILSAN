#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Script para probar el sistema completo de permisos de dropdowns
"""

import requests
import json
import time

def probar_sistema_permisos():
    """
    Prueba completa del sistema de permisos
    """
    print("=== PRUEBA DEL SISTEMA DE PERMISOS DROPDOWNS ===\n")
    
    base_url = "http://127.0.0.1:5000"
    
    # Test 1: Verificar que la aplicaci√≥n est√© ejecut√°ndose
    print("1. Verificando que la aplicaci√≥n est√© activa...")
    try:
        response = requests.get(f"{base_url}/", timeout=5)
        if response.status_code in [200, 302]:
            print("   ‚úÖ Aplicaci√≥n respondiendo correctamente")
        else:
            print(f"   ‚ö†Ô∏è  Aplicaci√≥n responde con c√≥digo: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå Error conectando con la aplicaci√≥n: {e}")
        return False
    
    # Test 2: Verificar endpoint de permisos
    print("\n2. Probando endpoint de verificaci√≥n de permisos...")
    try:
        # Crear una sesi√≥n para mantener cookies
        session = requests.Session()
        
        # Probar endpoint de verificaci√≥n de permiso
        test_data = {
            'pagina': 'LISTA_DE_MATERIALES',
            'seccion': 'Control de material',
            'boton': 'Control de material de almac√©n'
        }
        
        response = session.post(
            f"{base_url}/verificar_permiso_dropdown", 
            data=test_data,
            timeout=5
        )
        
        if response.status_code == 200:
            resultado = response.json()
            print(f"   ‚úÖ Endpoint responde: {resultado}")
        else:
            print(f"   ‚ö†Ô∏è  Endpoint responde con c√≥digo: {response.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå Error probando endpoint: {e}")
    
    # Test 3: Verificar endpoint de obtener permisos de usuario
    print("\n3. Probando endpoint de obtener permisos de usuario...")
    try:
        response = session.get(f"{base_url}/obtener_permisos_usuario_actual", timeout=5)
        
        if response.status_code == 200:
            resultado = response.json()
            print(f"   ‚úÖ Endpoint responde con {len(resultado.get('permisos', []))} permisos")
        else:
            print(f"   ‚ö†Ô∏è  Endpoint responde con c√≥digo: {response.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå Error probando endpoint: {e}")
    
    # Test 4: Verificar que los archivos JavaScript existan
    print("\n4. Verificando archivo JavaScript de permisos...")
    try:
        response = requests.get(f"{base_url}/static/js/permisos-dropdowns.js", timeout=5)
        
        if response.status_code == 200:
            contenido = response.text
            if "PermisosDropdowns" in contenido:
                print("   ‚úÖ Archivo JavaScript cargado correctamente")
            else:
                print("   ‚ö†Ô∏è  Archivo JavaScript no contiene objeto PermisosDropdowns")
        else:
            print(f"   ‚ùå Archivo JavaScript no encontrado (c√≥digo: {response.status_code})")
            
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå Error cargando JavaScript: {e}")
    
    # Test 5: Verificar una p√°gina LISTA
    print("\n5. Verificando p√°gina de LISTA...")
    try:
        # Primero hacer login si es necesario
        login_response = session.get(f"{base_url}/login", timeout=5)
        
        # Intentar acceder a una p√°gina del sistema
        response = session.get(f"{base_url}/", timeout=5)
        
        if response.status_code == 200:
            contenido = response.text
            if "data-permiso-pagina" in contenido:
                print("   ‚úÖ P√°gina contiene atributos de permisos")
            else:
                print("   ‚ö†Ô∏è  P√°gina no contiene atributos de permisos")
                
            if "permisos-dropdowns.js" in contenido:
                print("   ‚úÖ P√°gina incluye script de permisos")
            else:
                print("   ‚ö†Ô∏è  P√°gina no incluye script de permisos")
        else:
            print(f"   ‚ùå Error cargando p√°gina (c√≥digo: {response.status_code})")
            
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå Error accediendo a la p√°gina: {e}")
    
    print("\n=== PRUEBA COMPLETADA ===")
    print("\nüí° Para probar completamente:")
    print("   1. Abra http://127.0.0.1:5000 en su navegador")
    print("   2. Inicie sesi√≥n con un usuario")
    print("   3. Vaya al Panel de Administraci√≥n de Usuarios")
    print("   4. Configure permisos para un rol espec√≠fico")
    print("   5. Inicie sesi√≥n con ese usuario para verificar restricciones")
    
    return True

if __name__ == "__main__":
    probar_sistema_permisos()

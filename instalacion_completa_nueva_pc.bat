@echo off
title Instalaci√≥n Completa - Nueva Computadora
echo ========================================
echo  INSTALACI√ìN COMPLETA PARA NUEVA PC
echo  Sistema de Impresi√≥n Zebra ZT230
echo ========================================
echo.

echo üìã Este script realizar√°:
echo    1. Verificaci√≥n de prerequisitos
echo    2. Configuraci√≥n autom√°tica de IP
echo    3. Instalaci√≥n del servicio de impresi√≥n
echo    4. Verificaci√≥n de la impresora Zebra
echo    5. Pruebas del sistema completo
echo.

echo ‚ö†Ô∏è  PREREQUISITOS ANTES DE CONTINUAR:
echo    ‚Ä¢ Python 3.8+ instalado con PATH configurado
echo    ‚Ä¢ Impresora Zebra ZT230 conectada por USB
echo    ‚Ä¢ Drivers de Zebra instalados
echo    ‚Ä¢ Permisos de administrador
echo.

echo ¬øDesea continuar con la instalaci√≥n completa? (S/N)
set /p CONTINUAR="Respuesta: "
if /i not "%CONTINUAR%"=="S" (
    echo Instalaci√≥n cancelada.
    pause
    exit /b 0
)

echo.
echo üîç === PASO 1: VERIFICACI√ìN DE PREREQUISITOS ===
echo.

REM Verificar Python
echo Verificando Python...
python --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå ERROR: Python no est√° instalado o no est√° en PATH
    echo.
    echo üì• INSTALE PYTHON PRIMERO:
    echo    1. Vaya a: https://python.org/downloads/
    echo    2. Descargue la versi√≥n m√°s reciente
    echo    3. Durante instalaci√≥n marque "Add Python to PATH"
    echo    4. Reinicie esta instalaci√≥n despu√©s
    pause
    exit /b 1
)

for /f "tokens=2" %%a in ('python --version 2^>^&1') do set PYTHON_VERSION=%%a
echo ‚úÖ Python %PYTHON_VERSION% detectado correctamente

REM Verificar archivos del proyecto
echo.
echo Verificando archivos del proyecto...
if not exist "print_service.py" (
    echo ‚ùå ERROR: print_service.py no encontrado
    echo Aseg√∫rese de estar en la carpeta correcta del proyecto
    pause
    exit /b 1
)
echo ‚úÖ print_service.py encontrado

if not exist "app\templates\Control de material\Control de material de almacen.html" (
    echo ‚ùå ERROR: Archivo HTML principal no encontrado
    echo Verifique que todos los archivos est√©n copiados
    pause
    exit /b 1
)
echo ‚úÖ Archivo HTML principal encontrado

if not exist "run.py" (
    echo ‚ùå ERROR: run.py no encontrado
    echo Verifique que todos los archivos est√©n copiados
    pause
    exit /b 1
)
echo ‚úÖ run.py encontrado

echo.
echo üîß === PASO 2: CONFIGURACI√ìN AUTOM√ÅTICA DE IP ===
echo.

REM Detectar IP autom√°ticamente
echo Detectando IP de esta computadora...
for /f "tokens=2 delims=:" %%a in ('powershell -Command "(Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias 'Ethernet*' ^| Where-Object {$_.IPAddress -like '192.168.*'})[0].IPAddress"') do (
    set CURRENT_IP=%%a
)
set CURRENT_IP=%CURRENT_IP: =%

if "%CURRENT_IP%"=="" (
    echo ‚ö†Ô∏è  No se pudo detectar autom√°ticamente.
    set /p CURRENT_IP="Ingrese la IP manualmente (ej: 192.168.0.220): "
)

echo ‚úÖ IP configurada: %CURRENT_IP%

REM Crear backups y actualizar archivos
echo.
echo Actualizando configuraci√≥n...
copy "app\templates\Control de material\Control de material de almacen.html" "app\templates\Control de material\Control de material de almacen.html.backup" >nul
copy "run.py" "run.py.backup" >nul

REM SOLO actualizar run.py - el servicio de impresi√≥n siempre es localhost
powershell -Command "(Get-Content 'run.py') -replace \"host='192\.168\.0\.211'\", \"host='%CURRENT_IP%'\" | Set-Content 'run.py'"

echo ‚úÖ Configuraci√≥n actualizada:
echo    ‚Ä¢ Aplicaci√≥n web: %CURRENT_IP%:5000
echo    ‚Ä¢ Servicio de impresi√≥n: localhost:5002 (local en cada PC)

echo.
echo üñ®Ô∏è  === PASO 3: INSTALACI√ìN DEL SERVICIO DE IMPRESI√ìN ===
echo.

echo Instalando dependencias de Python...
pip install flask flask-cors pywin32 --quiet

if errorlevel 1 (
    echo ‚ö†Ô∏è  Error en instalaci√≥n autom√°tica. Intentando individual...
    pip install flask --quiet
    pip install flask-cors --quiet
    pip install pywin32 --quiet
)

echo ‚úÖ Dependencias instaladas

echo.
echo üîç === PASO 4: VERIFICACI√ìN DE IMPRESORA ZEBRA ===
echo.

echo Iniciando verificaci√≥n de impresora...
echo Esto tomar√° unos segundos...

REM Crear script temporal para verificar impresora
echo import win32print > temp_check_printer.py
echo printers = [printer[2] for printer in win32print.EnumPrinters(win32print.PRINTER_ENUM_LOCAL)] >> temp_check_printer.py
echo zebra_found = any('zebra' in p.lower() or 'zt230' in p.lower() or 'zpl' in p.lower() for p in printers) >> temp_check_printer.py
echo print('ZEBRA_FOUND' if zebra_found else 'ZEBRA_NOT_FOUND') >> temp_check_printer.py
echo print('PRINTERS:' + ';'.join(printers)) >> temp_check_printer.py

python temp_check_printer.py > printer_check_result.txt 2>&1

if exist printer_check_result.txt (
    findstr "ZEBRA_FOUND" printer_check_result.txt >nul
    if not errorlevel 1 (
        echo ‚úÖ Impresora Zebra detectada correctamente
    ) else (
        echo ‚ö†Ô∏è  Impresora Zebra no detectada
        echo.
        echo üìã Impresoras encontradas:
        findstr "PRINTERS:" printer_check_result.txt
        echo.
        echo üîß VERIFIQUE:
        echo    ‚Ä¢ Impresora conectada por USB
        echo    ‚Ä¢ Impresora encendida
        echo    ‚Ä¢ Drivers de Zebra instalados
        echo.
        echo ¬øDesea continuar de todos modos? (S/N)
        set /p CONTINUAR_SIN_ZEBRA="Respuesta: "
        if /i not "%CONTINUAR_SIN_ZEBRA%"=="S" (
            echo Instalaci√≥n cancelada.
            del temp_check_printer.py printer_check_result.txt 2>nul
            pause
            exit /b 1
        )
    )
)

del temp_check_printer.py printer_check_result.txt 2>nul

echo.
echo üéâ === INSTALACI√ìN COMPLETADA ===
echo.

echo ‚úÖ Configuraci√≥n finalizada:
echo    ‚Ä¢ IP de aplicaci√≥n web: %CURRENT_IP%
echo    ‚Ä¢ Servicio de impresi√≥n: http://localhost:5002 (local)
echo    ‚Ä¢ Aplicaci√≥n web: http://%CURRENT_IP%:5000
echo    ‚Ä¢ Dependencias: Flask, Flask-CORS, PyWin32
echo    ‚Ä¢ Backups creados: *.backup
echo.

echo üöÄ PARA USAR EL SISTEMA:
echo.
echo    1. INICIAR SERVICIO DE IMPRESI√ìN:
echo       ‚Üí Doble clic en: start_print_service_local.bat
echo       ‚Üí O ejecutar: python print_service.py
echo.
echo    2. INICIAR APLICACI√ìN WEB:
echo       ‚Üí Abrir nueva ventana CMD
echo       ‚Üí Ejecutar: python run.py
echo.
echo    3. ACCEDER AL SISTEMA:
echo       ‚Üí Navegador: http://%CURRENT_IP%:5000
echo.

echo üß™ PARA PROBAR EL SISTEMA:
echo    ‚Ä¢ En el navegador, presione F12 (consola)
echo    ‚Ä¢ Ejecute: testServicioWin32()
echo    ‚Ä¢ Debe mostrar impresora Zebra detectada
echo.

echo ¬øDesea iniciar autom√°ticamente los servicios ahora? (S/N)
set /p INICIAR_SERVICIOS="Respuesta: "
if /i "%INICIAR_SERVICIOS%"=="S" (
    echo.
    echo üöÄ Iniciando servicios...
    echo.
    echo ‚ö†Ô∏è  Se abrir√°n 2 ventanas de CMD:
    echo    1. Servicio de impresi√≥n (puerto 5002)
    echo    2. Aplicaci√≥n web (puerto 5000)
    echo.
    echo üí° IMPORTANTE: Mantenga ambas ventanas abiertas
    echo.
    pause
    
    REM Iniciar servicio de impresi√≥n en nueva ventana
    start "Servicio de Impresi√≥n Zebra" cmd /k "echo Iniciando servicio de impresi√≥n... && python print_service.py"
    
    REM Esperar un poco
    timeout /t 3 /nobreak >nul
    
    REM Iniciar aplicaci√≥n web en nueva ventana
    start "Aplicaci√≥n Web ILSAN" cmd /k "echo Iniciando aplicaci√≥n web... && python run.py"
    
    echo.
    echo ‚úÖ Servicios iniciados en ventanas separadas
    echo.
    echo üåê Acceda al sistema en:
    echo    http://%CURRENT_IP%:5000
    echo.
)

echo.
echo üìû Si tiene problemas, consulte:
echo    ‚Ä¢ GUIA_INSTALACION_NUEVA_COMPUTADORA.md
echo    ‚Ä¢ Los archivos de log generados
echo    ‚Ä¢ Secci√≥n de troubleshooting en README
echo.

pause

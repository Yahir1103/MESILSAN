#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Demo completa de la nueva interfaz de gesti√≥n de permisos
Muestra todas las capacidades y estad√≠sticas del sistema
"""

import requests
import json
from collections import defaultdict

def demo_completa():
    """Demostraci√≥n completa de todas las capacidades"""
    base_url = "http://localhost:5000"
    
    print("üéâ DEMO COMPLETA - INTERFAZ DE GESTI√ìN DE PERMISOS")
    print("=" * 70)
    
    # Obtener datos del sistema
    print("\nüìä CARGANDO DATOS DEL SISTEMA...")
    
    try:
        # Cargar roles
        roles_response = requests.get(f"{base_url}/admin/api/roles")
        roles = roles_response.json()
        
        # Cargar dropdowns
        dropdowns_response = requests.get(f"{base_url}/admin/api/dropdowns")
        dropdowns = dropdowns_response.json()
        
        print(f"   ‚úÖ {len(roles)} roles cargados")
        print(f"   ‚úÖ {len(dropdowns)} dropdowns cargados")
        
    except Exception as e:
        print(f"   ‚ùå Error cargando datos: {e}")
        return
    
    # An√°lisis por categor√≠as
    print("\nüìÇ AN√ÅLISIS POR CATEGOR√çAS:")
    print("-" * 40)
    
    categorias = defaultdict(list)
    for dropdown in dropdowns:
        boton = dropdown['boton']
        if '_' in boton:
            prefijo = boton.split('_')[0] + '_'
            categorias[prefijo].append(boton)
        else:
            categorias['otros'].append(boton)
    
    # Mostrar estad√≠sticas por categor√≠a
    for categoria, items in sorted(categorias.items()):
        print(f"   {categoria:<15} : {len(items):>3} dropdowns")
    
    # An√°lisis de permisos por rol
    print("\nüë• AN√ÅLISIS DE PERMISOS POR ROL:")
    print("-" * 40)
    
    for role in roles[:5]:  # Mostrar primeros 5 roles
        try:
            permisos_response = requests.get(f"{base_url}/admin/api/role-permissions/{role['nombre']}")
            permisos = permisos_response.json()
            
            # An√°lisis por categor√≠a para este rol
            permisos_por_categoria = defaultdict(int)
            for permiso in permisos:
                boton = permiso['boton']
                if '_' in boton:
                    prefijo = boton.split('_')[0] + '_'
                    permisos_por_categoria[prefijo] += 1
                else:
                    permisos_por_categoria['otros'] += 1
            
            print(f"\n   üîë {role['nombre']} ({len(permisos)} permisos totales):")
            for categoria, count in sorted(permisos_por_categoria.items()):
                if count > 0:
                    print(f"      {categoria:<15} : {count:>2} permisos")
        
        except Exception as e:
            print(f"      ‚ùå Error cargando permisos para {role['nombre']}")
    
    # Demostraci√≥n de funcionalidades
    print("\nüöÄ DEMOSTRACI√ìN DE FUNCIONALIDADES:")
    print("-" * 40)
    
    # Test de b√∫squeda simulada
    test_searches = ["control", "info", "lista", "calidad", "material"]
    print("\n   üîç Capacidades de b√∫squeda:")
    for search_term in test_searches:
        matches = [d for d in dropdowns if search_term.lower() in d['boton'].lower()]
        print(f"      '{search_term}' ‚Üí {len(matches)} resultados")
    
    # Test de filtros por categor√≠a
    print("\n   üìÇ Filtros por categor√≠a:")
    main_categories = ['info_', 'lista_', 'control_', 'menu_', 'proceso_']
    for category in main_categories:
        matches = [d for d in dropdowns if d['boton'].startswith(category)]
        print(f"      {category:<10} ‚Üí {len(matches)} dropdowns")
    
    # Estad√≠sticas finales
    print("\nüìà ESTAD√çSTICAS FINALES:")
    print("-" * 40)
    print(f"   üìã Total de dropdowns gestionables: {len(dropdowns)}")
    print(f"   üë• Total de roles configurables: {len(roles)}")
    print(f"   üìÇ Categor√≠as identificadas: {len(categorias)}")
    
    # Top categor√≠as
    top_categorias = sorted(categorias.items(), key=lambda x: len(x[1]), reverse=True)[:5]
    print(f"\n   üèÜ Top 5 categor√≠as con m√°s dropdowns:")
    for i, (categoria, items) in enumerate(top_categorias, 1):
        print(f"      {i}. {categoria:<15} : {len(items)} dropdowns")
    
    # Ejemplo de operaciones disponibles
    print("\n‚öôÔ∏è OPERACIONES DISPONIBLES:")
    print("-" * 40)
    print("   ‚úÖ Toggle individual de permisos")
    print("   ‚úÖ Habilitar todos los permisos de un rol")
    print("   ‚úÖ Deshabilitar todos los permisos de un rol")
    print("   ‚úÖ B√∫squeda en tiempo real")
    print("   ‚úÖ Filtrado por categor√≠as")
    print("   ‚úÖ Contadores autom√°ticos")
    print("   ‚úÖ Notificaciones de confirmaci√≥n")
    
    # Enlaces de acceso
    print("\nüîó ACCESO A LA INTERFAZ:")
    print("-" * 40)
    print(f"   üåê URL Principal: {base_url}/admin/permisos-dropdowns")
    print(f"   üõ°Ô∏è  Desde Admin Panel: Bot√≥n 'Gestionar Permisos'")
    
    # Conclusi√≥n
    print("\n" + "=" * 70)
    print("üéä ¬°SISTEMA COMPLETAMENTE OPERATIVO!")
    print("üéØ Gesti√≥n completa de 117 dropdowns disponibles")
    print("üîß Interfaz moderna con b√∫squeda y filtros avanzados")
    print("‚ö° Operaciones en tiempo real con feedback inmediato")
    print("üì± Accesible desde cualquier navegador")
    print("=" * 70)

if __name__ == "__main__":
    demo_completa()
